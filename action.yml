name: 'Kubernetes Helm Multi-Deploy'
description: "Deploys all helm chart folders inside a 'deployment' folder in the project root."
icon: play
color: green

inputs:
  image-tag:
    description: "The image tag to use in the deployments."
    required: true
  k8s-namespace:
    description: "Deployment namespace in kubernetes."
    required: true
  environment-slug:
    description: "Short name of deployment environment. Should be like 'dev', 'prod'. Set this if you have a values-<env>.yaml."
    required: false
  dry-run:
    description: "Skip the actual deployment and just show a diff."
    required: false
    default: false

runs:
  shell: bash
  using: 'docker'
  image: 'Dockerfile'
  args:
    - /bin/sh -c 'helm list'

  # using: 'composite'

  # steps:
  #   - shell: bash
  #     run: |
  #       # Setup
  #       cd deployment
  #
  #       # Creating namespace if necessary
  #       kubectl create namespace ${{ inputs.k8s-namespace }} || true
  #
  #       # Setup our helm args (TODO OPTIONAL NOT SET IF EXTERNAL DOCKER IMAGE)
  #       export HELM_EXTRA_ARGS="$HELM_EXTRA_ARGS --set image.tag=${{ inputs.image-tag }} --set global.image.tag=${{ inputs.image-tag }} --set global.namespace=${{ inputs.k8s-namespace }}";
  #
  #       # Iterate through all our deployments
  #       for CURRENT_HELM_CHART in $(ls -d */ | grep -Evi "helm_value_files|templates" | tr '/' ' '); do
  #
  #         echo "Update our helm chart dependencies"
  #         helm dependency update $CURRENT_HELM_CHART || true
  #
  #         # Discover values files
  #         VALUES_ENV_FILE=`find $CURRENT_HELM_CHART -name values-${INPUT_ENVIRONMENT_SLUG}.yaml`
  #         VALUES_FILE_ARGS="-f $CURRENT_HELM_CHART/values.yaml${VALUES_ENV_FILE:+ -f $VALUES_ENV_FILE}"
  #
  #
  #
  #         echo "--- HELM DIFF ---"
  #         helm diff upgrade --allow-unreleased --namespace ${{ inputs.k8s-namespace }} $HELM_UPDIFF_EXTRA_ARGS $CURRENT_HELM_CHART ./$CURRENT_HELM_CHART \
  #           $VALUES_FILE_ARGS \
  #           $HELM_EXTRA_ARGS
  #
  #         if [ "${{ inputs.dry-run  }}" == "false" ]; then
  #           echo "--- HELM UPGRADE ---"
  #           helm upgrade --install --atomic --namespace ${{ inputs.k8s-namespace }} $CURRENT_HELM_CHART ./$CURRENT_HELM_CHART \
  #             $VALUES_FILE_ARGS \
  #             $HELM_EXTRA_ARGS;
  #         fi
  #       done
